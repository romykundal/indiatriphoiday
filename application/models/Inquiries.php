<?php

/**
 * Inquiries
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Inquiries extends BaseInquiries
{
	
	/**
	 * Author  Rohit
	 * @param varchar $params
	 * return Array
	 * Version 1.0
	 */
	
	public static function getOrderlist($params){
		
		$srh = isset($params["searchtext"]) ? $params["searchtext"] : '';
		
		$data = Doctrine_Query::create()
				->select('g.*,c.name as catg_name')
				->from('inquiries g')
				->leftJoin("g.Category c")
				->where('g.name LIKE ?', "$srh%")
				->orderBy('g.id DESC');
		
		return Zend_Json::encode(DataTable_Helper::generateDataTableResponse($data, 
				$params, 
				array("__identifier" => 'g.name', 'g.phoneNumber', 'g.departure', 'g.arrival', 'g.departureDate', 'g.returnDate', 'g.travelType', 'g.departureTime', 'g.returnTime', 'g.status', 'g.created_at','g.updated_at'),
						array(),
						array()
				));
		exit();
		
	}
	
	/**
	 * Save 
	 * @author Rohit
	 * @version 1.0
	 */
	
	public static function saveInquiry($data)
	{

		  $Obj = new Inquiries();
		  $name = $data["firstName"] .' '. $data["lastName"] ;
		  $Obj->user_id = BackEnd_Helper_viewHelper::stripSlashesFromString($data["user_id"]);
		  $Obj->name = BackEnd_Helper_viewHelper::stripSlashesFromString($name);
		  $Obj->email = BackEnd_Helper_viewHelper::stripSlashesFromString($data["email"]);
		  $Obj->phoneNumber = BackEnd_Helper_viewHelper::stripSlashesFromString($data["phoneNumber"]);
		  $Obj->address = BackEnd_Helper_viewHelper::stripSlashesFromString($data["address"]);
		  $Obj->zipcode = BackEnd_Helper_viewHelper::stripSlashesFromString($data["zipcode"]);
		  
		  $Obj->departure = BackEnd_Helper_viewHelper::stripSlashesFromString($data["departure"]);
		  $Obj->arrival = BackEnd_Helper_viewHelper::stripSlashesFromString($data["arrival"]);
		  $Obj->departureDate = BackEnd_Helper_viewHelper::stripSlashesFromString($data["departureDate"]);
		  $Obj->returnDate = BackEnd_Helper_viewHelper::stripSlashesFromString($data["returnDate"]);
		  $Obj->adult = BackEnd_Helper_viewHelper::stripSlashesFromString($data["adult"]);
		  $Obj->child = BackEnd_Helper_viewHelper::stripSlashesFromString($data["child"]);
		  $Obj->infant = BackEnd_Helper_viewHelper::stripSlashesFromString($data["infant"]);
		  $Obj->travelType = BackEnd_Helper_viewHelper::stripSlashesFromString($data["travelType"]);
		  $Obj->gender = BackEnd_Helper_viewHelper::stripSlashesFromString($data["gender"]);

		  
		  $Obj->save();
		  $lid = $Obj->id;
		  
		return $lid ;
	}


	function updateInquiry($params){
		
	$this->departureDate = BackEnd_Helper_viewHelper::stripSlashesFromString($params['departureDate']);
	$this->returnDate = BackEnd_Helper_viewHelper::stripSlashesFromString($params['returnDate']);
	$this->departureTime = BackEnd_Helper_viewHelper::stripSlashesFromString($params['departureTime']);
	$this->returnTime = BackEnd_Helper_viewHelper::stripSlashesFromString($params['returnTime']);

	$this->baseFare = BackEnd_Helper_viewHelper::stripSlashesFromString($params['baseFare']);
	$this->surcharges = BackEnd_Helper_viewHelper::stripSlashesFromString($params['surcharges']);
	$this->grandTotal = BackEnd_Helper_viewHelper::stripSlashesFromString($params['grandTotal']);
	$this->discount = BackEnd_Helper_viewHelper::stripSlashesFromString($params['discount']);
	$this->stop = BackEnd_Helper_viewHelper::stripSlashesFromString($params['stop']);
	$this->stopDetails = BackEnd_Helper_viewHelper::stripSlashesFromString($params['stopDetails']);
	$this->status = BackEnd_Helper_viewHelper::stripSlashesFromString($params['status']);
		
		$pageid = @$params['id'];
		
		try{
		//call cache function
			$page = $this->save();
			$pageId =  $this->id;
		
			return true;
		}catch (Exception $e){
			return false;
		}
		
	}

	
	/**
	 * get to five category
	 * @param string $keyword
	 * @return array $data
	 * @author Raman
	 * @version 1.0
	 */
	public static function searchProduct($keyword) {
	
		$data = Doctrine_Query::create()->select('g.title as name')
		->from("inquiries g")
		->where('g.deleted = 0')
		->andWhere("g.title LIKE ?", "%$keyword%")
		->orderBy("g.title ASC")
		->limit(5)
		->fetchArray();

		return $data;
	}
	
	/**
	 * Delete product photo by id
	 * @param integer $params
	 * @author Raman
	 * @version 1.0
	 */
	public static function deleteProduct($id) {
		$q = Doctrine_Query::create()->update('inquiries g')
		->set('g.deleted', 1)
		->where('g.id=?', $id)
		->execute();
		return true;
		
	}
	
	/**
	 * Author  Rohit
	 * @param integer $catId
	 * return Array
	 * Version 1.0
	 */
	
	public static function getOrdersForFront($uid){
	
		$data = Doctrine_Query::create()
		->select('i.*')
		->from('inquiries i')
		->where('i.user_id=?', $uid)
		->orderBy('i.id DESC')
		->fetchArray();
		return $data;
	}

	public static function getOrderDetails($oId){
	
		$data = Doctrine_Query::create()
		->select('g.*')
		->from('inquiries g')
		->where('g.id=?', $oId)
		->fetchOne(null , Doctrine::HYDRATE_ARRAY);
		return $data;
	}


	
}