<?php

/**
 * BaseInquiries
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseInquiries extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('inquiries');
        $this->hasColumn('id', 'integer', 20, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'comment' => 'PK',
             'length' => '20',
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
         'type' => 'integer',
         'length' => '20',
         ));   
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
		$this->hasColumn('gender', 'enum', null, array(
                'type' => 'enum',
                'values' =>
                array(
                        0 => 'male',
                        1 => 'female',
                ),
        ));
        $this->hasColumn('phoneNumber', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
		$this->hasColumn('address', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('zipcode', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
		$this->hasColumn('departure', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('arrival', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));     
		$this->hasColumn('adult', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('child', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('infant', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));
        $this->hasColumn('departureDate', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('returnDate', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('class', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('travelType', 'enum', null, array(
                'type' => 'enum',
                'values' =>
                array(
                        0 => 'plane',
                        1 => 'train',
                ),
        ));
        $this->hasColumn('departureTime', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('returnTime', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('baseFare', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('surcharges', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('grandTotal', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('discount', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('stop', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('stopDetails', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
		$this->hasColumn('category_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => '20',
             ));   

        $this->hasColumn('status', 'enum', null, array(
                'type' => 'enum',
                'values' =>
                array(
                        0 => 'pending',
                        1 => 'booked',
                        1 => 'cancelled'
                ),
        ));
    }

    public function setUp()
    {
        parent::setUp();
        
        $this->hasOne('Category', array(
        		'local' => 'category_id',
        		'foreign' => 'id'));

        $softdelete0 = new Doctrine_Template_SoftDelete(array(
             'name' => 'deleted',
             'type' => 'boolean',
             'options' => 
             array(
              'default' => 0,
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
             ),
             ));
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}